name: Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run Vitest tests
        run: npm run test:run
        
      - name: Generate test coverage
        run: npm run test:coverage
        
      - name: Build project
        run: npm run build
        
      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            
            // Ler resultados dos testes se existir arquivo de coverage
            let testSummary = '✅ Todos os testes passaram!';
            
            if (fs.existsSync('./coverage/coverage-summary.json')) {
              const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              
              testSummary = `
            ## 📊 Resultados dos Testes
            
            ✅ **Testes**: Todos passaram
            📈 **Coverage**:
            - **Linhas**: ${total.lines.pct}%
            - **Funções**: ${total.functions.pct}%
            - **Branches**: ${total.branches.pct}%
            - **Statements**: ${total.statements.pct}%
            
            🏗️ **Build**: Sucesso
            `;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testSummary
            });

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: |
          echo "🔍 Running security audit..."
          if npm audit --audit-level=moderate; then
            echo "✅ No vulnerabilities found" > audit-results.txt
          else
            echo "⚠️ Vulnerabilities detected:" > audit-results.txt
            npm audit --audit-level=moderate >> audit-results.txt || true
          fi
        
      - name: Comment audit results
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            
            let auditResults = '';
            if (fs.existsSync('./audit-results.txt')) {
              auditResults = fs.readFileSync('./audit-results.txt', 'utf8');
            }
            
            const comment = `
            ## 🔒 Security Audit
            
            ${auditResults.includes('No vulnerabilities found') || auditResults.length === 0 ? '✅ Nenhuma vulnerabilidade encontrada' : '⚠️ Vulnerabilidades detectadas'}
            
            \`\`\`
            ${auditResults || '✅ Projeto seguro!'}
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 